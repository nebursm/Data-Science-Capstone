(pr$vector)[1]
(pr$vector)[names(vector[1])]
(pr$vector)[names(pr$vector)[1]]
pr$vector["--0KsjlAThNWua2Pr4HStQ"]
dimnames(pr$vector)
pr$vector[["--0KsjlAThNWua2Pr4HStQ"]]
pr$vector[[names(pr$vector)[1]]]
pr$vector[[names(pr$vector)[1:10]]]
names(pr$vector)[1:10]
x <- rank(unname(pr$vector))
head(x)
pr$vector[x == 1]
V(user_net)[which.max(pr$vector)]
which.max(pr$vector)
pr$vector[x == 174100]
pr$vector[x == 174099]
(r1 <- rank(x1 <- c(3, 1, 4, 15, 92)))
bet[1]
bet_rank <- rank(unname(bet))
pr_rank <- rank(unname(pr$vector))
bet_rank <- rank(-unname(bet))
pr_rank <- rank(-unname(pr$vector))
pr$vector[pr_rank == 1]
pr$vector[pr_rank <= 10]
v(user_net)[pr$vector[pr_rank <= 10]]
V(user_net)[pr$vector[pr_rank <= 10]]
V(user_net)[which(pr$vector[pr_rank <= 10])]
which(pr$vector[pr_rank <= 10])
pr$vector[pr_rank <= 10]
getINDEX(pr$vector, pr$vector[pr_rank <= 10])
match(pr$vector[pr_rank <= 10], pr$vector)
V(user_net)[match(pr$vector[pr_rank <= 10], pr$vector)]
bet[1]
user_net[bet_rank <= 10]
V(user_net[bet_rank <= 10])
V(user_net)[user_net[bet_rank <= 10]]
user_net[1]
V(user_net)[1]
bet[1]
match(bet[bet_rank <= 10], bet)
V(user_net)[match(bet[bet_rank <= 10], bet)]
V(user_net)[match(bet[bet_rank <= 10], bet)]
V(user_net)[match(pr$vector[pr_rank <= 10], pr$vector)]
top_bet <- V(user_net)[match(bet[bet_rank <= 10], bet)]
top_pr <- V(user_net)[match(pr$vector[pr_rank <= 10], pr$vector)]
top_bet[1]
intersect(top_bet, top_pr)
top_both <- intersect(top_bet, top_pr)
x <- V(user_net)[top_both]
plot(x)
plot(x, layout=layout.fruchterman.reingold)
y <- V(user_net)[nei(intersect)]
y <- neighbors(user_net, top_both)
plot(y)
plot.igraph(y)
library(igraph)
plot(y)
str()
str(x)
x[1]
x[10]
x[6]
plot(user_net)
x <- subgraph(user_net, top_both)
x <- induced_subgraph(user_net, top_both)
plot(x)
x <- induced_subgraph(user_net, y)
plot(x)
x <- induced_subgraph(user_net, top_both)
plot(x)
plot(x, layout=layout.fruchterman.reingold)
plot(x, layout=layout.fruchterman.reingold, vertex.label.cex=1)
plot(x, layout=layout.fruchterman.reingold, vertex.label.cex=0.8)
n <- 50 # number of top nodes
top_bet <- V(user_net)[match(bet[bet_rank <= n], bet)]
top_pr <- V(user_net)[match(pr$vector[pr_rank <= n], pr$vector)]
top_both <- intersect(top_bet, top_pr)
# Create a subset network including only top nodes and plot it
top_net <- induced_subgraph(user_net, top_both)
par(mai=c(0,0,1,0))
plot(top_both, layout=layout.fruchterman.reingold, vertex.label.cex=0.8)
plot(top_net, layout=layout.fruchterman.reingold, vertex.label.cex=0.8)
n <- 20 # number of top nodes
top_bet <- V(user_net)[match(bet[bet_rank <= n], bet)]
top_pr <- V(user_net)[match(pr$vector[pr_rank <= n], pr$vector)]
top_both <- intersect(top_bet, top_pr)
# Create a subset network including only top nodes and plot it
top_net <- induced_subgraph(user_net, top_both)
par(mai=c(0,0,1,0))
plot(top_net, layout=layout.fruchterman.reingold, vertex.label.cex=0.8)
library(sqldf)
library(tcltk)
remove.packages("tcltk")
install.packages("tcltk")
install.packages("tcltk")
install.packages("tcltk")
library(tcltk)
library(sqldf)
library(igraph)
library(sqldf)
load("~/Documents/CURSOS/Data Science Capstone/yelp_dataset_challenge_academic_dataset/Capstone V04.RData")
# Rank betweeness and page rank scores
bet_rank <- rank(-unname(bet))
pr_rank <- rank(-unname(pr$vector))
# Get top nodes
n <- 20 # number of top nodes
top_bet <- V(user_net)[match(bet[bet_rank <= n], bet)]
top_pr <- V(user_net)[match(pr$vector[pr_rank <= n], pr$vector)]
top_both <- intersect(top_bet, top_pr)
# Create a subset network including only top nodes
top_net <- induced_subgraph(user_net, top_both)
par(mai=c(0,0,1,0))
# Replace vertex labels with user names where available, otherwise use user_id
vnames <- paste(names(V(top_net)), collapse="','")
sql <- paste0("select uname, user_id from user where user_id in('", vnames, "')")
unames <- sqldf(sql)
unames <- rbind(unames, data.frame(uname=setdiff(names(V(top_net)), unames[,2]), user_id=setdiff(names(V(top_net)), unames[,2])))
V(top_net)$label <- unames[match(names(V(top_net)), unames[,2]),1]
# Plot the resulting network
plot(top_net, layout=layout.fruchterman.reingold, vertex.label.cex=0.8)
library(doMC)
registerDoMC(cores = 6)
library(sqldf)
library(igraph)
# Rank betweeness and page rank scores
bet_rank <- rank(-unname(bet))
pr_rank <- rank(-unname(pr$vector))
# Get top nodes
n <- 20 # number of top nodes
top_bet <- V(user_net)[match(bet[bet_rank <= n], bet)]
top_pr <- V(user_net)[match(pr$vector[pr_rank <= n], pr$vector)]
top_both <- intersect(top_bet, top_pr)
# Create a subset network including only top nodes
top_net <- induced_subgraph(user_net, top_both)
par(mai=c(0,0,1,0))
# Replace vertex labels with user names where available, otherwise use user_id
vnames <- paste(names(V(top_net)), collapse="','")
sql <- paste0("select uname, user_id from user where user_id in('", vnames, "')")
unames <- sqldf(sql)
unames <- rbind(unames, data.frame(uname=setdiff(names(V(top_net)), unames[,2]), user_id=setdiff(names(V(top_net)), unames[,2])))
V(top_net)$label <- unames[match(names(V(top_net)), unames[,2]),1]
# Plot the resulting network
plot(top_net, layout=layout.fruchterman.reingold, vertex.label.cex=0.8)
unames
V(top_net)$names
V(top_net)$name
library(cluster)
clusplot(user_scale, fit$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
clusplot(sample(user_scale,1000), fit$cluster, color=TRUE, shade=TRUE, labels=2, lines=0)
dim(fit$cluster)
length(fit$cluster)
x <- sample(user_scale, size=1000)
daisy(x)
x <- sample(data.frame(user_scale), size=1000)
View(user_scale)
x <- user_scale[sample(nrow(user_scale), size=1000)]
head(x)
x <- user_scale[sample(nrow(user_scale), size=1000),]
head(x)
daisy(x)
y <- daisy(x)
head(y)
sk2 <- silhouette(fit$cl, y^2)
aggregate(user_sub,by=list(fit$cluster),FUN=mean)
View(user_sub)
user_sub2 <- user_sub[fit.cluster == 2]
user_sub2 <- user_sub[user_sub$fit.cluster == 2]
user_sub2 <- user_sub[user_sub$fit.cluster == 2,]
x <- daisy(user_sub2)
fit$cluster[2]
fit$cluster[1]
head(fit$cluster)
fit$cluster[1:11]
fit$cluster[fit$cluster == 2]
sk2 <- silhouette(fit$cluster[fit$cluster == 2], user_sub2)
sk2 <- silhouette(fit$cluster[fit$cluster == 2], x^2)
plot(sk2)
sk2
fit$cluster[fit$cl == 2]
fit$cl[fit$cl == 2]
x <- daisy(user_sub2, metric = "euclidean")
sk2 <- silhouette(fit$cluster[fit$cluster == 2], x^2)
user_scale_samp <- user_scale[sample(nrow(user_scale), size=1000), 1]
km <- kmeans(user_scale_samp, 5)
aggregate(user_sub,by=list(km$cluster),FUN=mean)
dissE <- daisy(user_scale_samp)
user_scale_samp <- user_scale[sample(nrow(user_scale), size=1000), ]
km <- kmeans(user_scale_samp, 5)
aggregate(user_scale_samp,by=list(km$cluster),FUN=mean)
dissE <- daisy(user_scale_samp)
sk <- silhoutte(km$cl, dissE)
sk <- silhouette(km$cl, dissE)
plot(sk)
names(sk)
summary(sk)
set.seed(12345)
samp <- sample(nrow(user_scale), size=1000
)
user_scale_samp <- user_scale[samp, ]
km <- kmeans(user_scale_samp, 5)
aggregate(user_sub[samp,],by=list(km$cluster),FUN=mean)
dissE <- daisy(user_scale_samp)
sk <- silhoutte(km$cl, dissE)
sk <- silhouette(km$cl, dissE)
summary(sk)
plot(sk)
par(mai=c(0,0,1,0))
plot(sk)
par(mai=c(1,1,1,1))
plot(sk)
plot(sk, cex=0.8)
plot(sk, cex=0.6)
plot(sk, cex.lab=0.6)
plot(sk, cex.axis=0.6)
plot(sk, cex.axis=0.6, col="steelblue")
plot(sk, cex.axis=0.6, col="red")
plot(sk, cex.lab=0.6, col="red")
plot(sk, cex.sub=0.6, col="red")
set.seed(12345)
samp <- sample(nrow(user_scale), size=5000)
user_scale_samp <- user_scale[samp, ]
km <- kmeans(user_scale_samp, 5)
aggregate(user_sub[samp,],by=list(km$cluster),FUN=mean)
dissE <- daisy(user_scale_samp)
sk <- silhouette(km$cl, dissE)
summary(sk)
par(mai=c(1,1,1,1))
plot(sk, cex.sub=0.6, col="red")
plot(sk, cex.sub=0.6, col="red", xax.pretty=T)
plot(sk, cex.sub=0.6, col="red", xax.pretty=F)
plot(sk, cex.sub=0.6, col="red", adj=0)
plot(sk, cex.sub=0.6, col=c(2,0), adj=0)
plot(sk, cex.sub=0.6, col="blue", adj=0)
set.seed(12345)
samp <- sample(nrow(user_scale), size=10000)
user_scale_samp <- user_scale[samp, ]
km <- kmeans(user_scale_samp, 5)
aggregate(user_sub[samp,],by=list(km$cluster),FUN=mean)
dissE <- daisy(user_scale_samp)
sk <- silhouette(km$cl, dissE)
summary(sk)
par(mai=c(1,1,1,1))
plot(sk, cex.sub=0.6, col="blue", adj=0)
sk <- silhouette(km$cl, dissE^2)
summary(sk)
par(mai=c(1,1,1,1))
plot(sk, cex.sub=0.6, col="blue", adj=0)
set.seed(12345)
samp <- sample(nrow(user_scale), size=1000)
user_scale_samp <- user_scale[samp, ]
km <- kmeans(user_scale_samp, 5)
aggregate(user_sub[samp,],by=list(km$cluster),FUN=mean)
dissE <- daisy(user_scale_samp)
sk <- silhouette(km$cl, dissE)
summary(sk)
par(mai=c(1,1,1,1))
plot(sk, cex.sub=0.6, col="red", adj=0)
km$centroid
plot(sk, cex=0.6, col="red", adj=0)
plot(sk, col="red")
aggregate(user_sub,by=list(fit$cluster),FUN=mean)
aggregate(user_sub,by=list(fit$cluster),FUN=sd)
aggregate(user_sub,by=list(fit$cluster),FUN=sd)[2]
aggregate(user_sub,by=list(fit$cluster),FUN=sd)[,2]
aggregate(user_sub,by=list(fit$cluster),FUN=sd)[2,]
aggregate(user_sub,by=list(fit$cluster),FUN=mean)[2,]
View(user_sub2)
View(user)
user_sub$user_id <- user$user_id
user_sub$user_id[user_sub$fit.cluster == 2]
unames
insersect(unames[,2],user_sub$user_id[user_sub$fit.cluster == 2])
intersect(unames[,2],user_sub$user_id[user_sub$fit.cluster == 2])
summary(fit)
aggregate(user_sub,by=list(fit$cluster),FUN=mean)
user_sub.cl2 <- user_sub[user_sub$fit.cluster == 2]
View(user_sub)
user_sub.cl2 <- user_sub[user_sub$fit.cluster == 2,]
install.packages("broom")
library(cluster)
library(broom)
kclusts <- data.fram2()
kclusts <- data.frame()
for (i in 1:9) {
kclusts$k <- i
kclusts$km <- kmeans(user_scale, i)
}
library(dplyr)
kclusts <- data.frame(k=1:9) %>% group_by(k) %>% do(kclust=kmeans(user_scale, .$k))
View(kclusts)
clusters <- kclusts %>% group_by(k) %>% do(tidy(.$kclust[[1]]))
assignments <- kclusts %>% group_by(k) %>% do(augment(.$kclust[[1]], user_scale))
clusterings <- kclusts %>% group_by(k) %>% do(glance(.$kclust[[1]]))
library(ggplot)
library(ggplot2)
ggplot(assignments, aes(x1, x2)) + geom_point(aes(color=.cluster)) + facet_wrap(~ k)
View(assignments)
ggplot(assignments, aes(review_count, fans)) + geom_point(aes(color=.cluster)) + facet_wrap(~ k)
kclusts <- data.frame(k=1:9) %>% group_by(k) %>% do(kclust=kmeans(user_scale_samp, .$k))
clusters <- kclusts %>% group_by(k) %>% do(tidy(.$kclust[[1]]))
assignments <- kclusts %>% group_by(k) %>% do(augment(.$kclust[[1]], user_scale_samp))
clusterings <- kclusts %>% group_by(k) %>% do(glance(.$kclust[[1]]))
ggplot(assignments, aes(review_count, fans)) + geom_point(aes(color=.cluster)) + facet_wrap(~ k)
View(user_sub)
ggplot(assignments, aes(review_count, tot_compliments)) + geom_point(aes(color=.cluster)) + facet_wrap(~ k)
ggplot(assignments, aes(review_count, stars)) + geom_point(aes(color=.cluster)) + facet_wrap(~ k)
View(user)
ggplot(assignments, aes(review_count, average_stars)) + geom_point(aes(color=.cluster)) + facet_wrap(~ k)
p1 <- ggplot(assignments, aes(review_count, fans)) + geom_point(aes(color=.cluster)) + facet_wrap(~ k)
p2 <- p1 + geom_point(data=clusters, size=10, shape="x")
p2
View(user_sub)
p1 <- ggplot(assignments, aes(review_count, fans)) + geom_point(aes(color=.cluster)) + facet_wrap(~ k)
p2 <- p1 + geom_point(data=clusters, size=10, shape="x")
p2
ggplot(assignments, aes(review_count, fans)) + geom_point(aes(color=.cluster)) + facet_wrap(~ k)
ggplot(assignments, aes(review_count, fans)) + geom_point(aes(color=.cluster)) + facet_wrap(~ k)
+ geom_point(data=clusters, size=10, shape="x")
ggplot(assignments, aes(review_count, fans)) + geom_point(aes(color=.cluster)) + facet_wrap(~ k)  + geom_point(data=clusters, size=10, shape="x")
ggplot(assignments, aes(review_count, average_stars)) + geom_point(aes(color=.cluster)) + facet_wrap(~ k) + geom_point(data=clusters, size=10, shape="x")
ggplot(assignments, aes(assignments$review_count, average_stars)) + geom_point(aes(color=.cluster)) + facet_wrap(~ k) + geom_point(data=clusters, size=10, shape="x")
ggplot(assignments, aes(assignments$review_count, assignments$average_stars)) + geom_point(aes(color=.cluster)) + facet_wrap(~ k) + geom_point(data=clusters, size=10, shape="x")
View(kclusts)
ggplot(clusterings, aes(k, tot.withinss)) + geom_line()
# K-Means Cluster Analysis
fit <- kmeans(user_scale, 4) # 4 cluster solution
# get cluster means
aggregate(user_sub,by=list(fit$cluster),FUN=mean)
# append cluster assignment
user_sub <- data.frame(user_sub, fit$cluster)
user_sub$user_id <- user$user_id
user_sub_cl1 <- user_sub[user_sub$fit.cluster == 1,]
km <- kmeans(user_scale_samp, 4)
aggregate(user_sub[samp,],by=list(km$cluster),FUN=mean)
dissE <- daisy(user_scale_samp)
sk <- silhouette(km$cl, dissE)
summary(sk)
par(mai=c(1,1,1,1))
plot(sk, col="red")
intersect(unames[,2],user_sub_cl1$user_id)
ggplot(assignments, aes(review_count, fans)) + geom_point(aes(color=.cluster)) + facet_wrap(~ k)
ggplot(assignments, aes(review_count, tot_compliments)) + geom_point(aes(color=.cluster)) + facet_wrap(~ k)
ggplot(assignments, aes(review_count, average_stars)) + geom_point(aes(color=.cluster)) + facet_wrap(~ k)
ggplot(clusterings, aes(k, tot.withinss)) + geom_line()
library(caret)
library(rattle)
install.packages("RGtk2")
library(rattle)
setwd("~/Documents/CURSOS/Data Science Capstone/Data-Science-Capstone")
knit2html("Cpastone_Report.Rmd")
library(rmarkdown)
knit2html("Capstone_Report.Rmd")
library(knitr)
knit2html("Capstone_Report.Rmd")
plot(rest_imp, top = 10)
str(rest_imp)
plot(rest_imp[1], top = 10)
plot(rest_imp$importance[1], top = 10)
plot(rest_imp, top = 10)
knit2html("Capstone_Report.Rmd")
load("~/Documents/CURSOS/Data Science Capstone/Data-Science-Capstone/Capstone_Question03.RData")
load("~/Documents/CURSOS/Data Science Capstone/Data-Science-Capstone/Capstone_Question03.RData")
library(tseries)
library(PerformanceAnalytics)
library(zoo)
library(shiny)
library(UsingR)
nike_prices = get.hist.quote(instrument="NKE", start="2013-01-01", end="2015-10-31", quote="AdjClose",provider="yahoo", origin="1970-01-01",compression="m", retclass="zoo")
visa_prices = get.hist.quote(instrument="V", start="2013-01-01", end="2015-10-31", quote="AdjClose",provider="yahoo", origin="1970-01-01",compression="m", retclass="zoo")
unh_prices = get.hist.quote(instrument="UNH", start="2013-01-01", end="2015-10-31", quote="AdjClose",provider="yahoo", origin="1970-01-01",compression="m", retclass="zoo")
dia_prices = get.hist.quote(instrument="DIA", start="2013-01-01", end="2015-10-31", quote="AdjClose",provider="yahoo", origin="1970-01-01",compression="m", retclass="zoo")
trav_prices = get.hist.quote(instrument="TRV", start="2013-01-01", end="2015-10-31", quote="AdjClose",provider="yahoo", origin="1970-01-01",compression="m", retclass="zoo")
amzn_prices = get.hist.quote(instrument="AMZN", start="2013-01-01", end="2015-10-31", quote="AdjClose",provider="yahoo", origin="1970-01-01",compression="m", retclass="zoo")
hd_prices = get.hist.quote(instrument="HD", start="2013-01-01", end="2015-10-31", quote="AdjClose",provider="yahoo", origin="1970-01-01",compression="m", retclass="zoo")
gs_prices = get.hist.quote(instrument="GS", start="2013-01-01", end="2015-10-31", quote="AdjClose",provider="yahoo", origin="1970-01-01",compression="m", retclass="zoo")
google_prices = get.hist.quote(instrument="GOOGL", start="2013-01-01", end="2015-10-31", quote="AdjClose",provider="yahoo", origin="1970-01-01",compression="m", retclass="zoo")
index(nike_prices) <- as.yearmon(index(nike_prices))
index(visa_prices) <- as.yearmon(index(visa_prices))
index(unh_prices) <- as.yearmon(index(unh_prices))
index(dia_prices) <- as.yearmon(index(dia_prices))
index(trav_prices) <- as.yearmon(index(trav_prices))
index(amzn_prices) <- as.yearmon(index(amzn_prices))
index(hd_prices) <- as.yearmon(index(hd_prices))
index(gs_prices) <- as.yearmon(index(gs_prices))
index(googl_prices) <- as.yearmon(index(googl_prices))
index(googl_prices) <- as.yearmon(index(google_prices))
index(google_prices) <- as.yearmon(index(google_prices))
all_prices <- merge(nike_prices, vis_prices, unh_prices, dia_prices, trav_prices, amzn_prices,
hd_prices, gs_prices, google_prices)
all_prices <- merge(nike_prices, visa_prices, unh_prices, dia_prices, trav_prices, amzn_prices,
hd_prices, gs_prices, google_prices)
colnames(all_prices) <- c("NIKE", "VISA", "UNITEDHEALTH", "DIA", "TRAVELERS", "AMAZON",
"HOME_DEPOT", "GOLDMAN_SACHS", "GOOGLE")
simple_returns = diff(all_prices)/lag(all_prices, k=-1);
str(all_prices)
diff(all_prices)
lag(all_prices)
lag(all_prices, k=1)
lag(all_prices, k=0)
lag(all_prices, k=2)
lag(all_prices, k=-1)
options(error=recover)
lag(all_prices, k=-1)
ls()
quit
lag(all_prices, k=-1)
ls()
lag(all_prices, k=-1)
ls()
lag(all_prices, k=-3)
options(error=NULL)
lag(all_prices, k=-3)
lag(all_prices, k=-2)
lag(all_prices, k=-20)
lag(all_prices, k=-10)
lag(all_prices, k=10)
str(all_prices)
summary(all_prices)
head(diff(all_prices))
head(all_prices)
head(diff(all_prices, lag=2))
all_prices[1]
all_prices[,1]
lag(all_prices)
lag(all_prices[,1])
lag(all_prices[,1:2])
lag(all_prices)
lag(all_prices, na.pad=T)
head(index(all_prices))
x <- c(1, 4, 5, 6)
zz <- zoo(x, x)
zz
lag(xx)
lag(zz)
lag(zz, k=-1)
lag(zz, k=1)
lag(zz, k=2)
zr <- as.zooreg(x, x)
zr <- as.zooreg(zz)
zr
lag(zr)
lag(zr,K05)
lag(zr,K=5)
lag(zr,k=5)
lag(zr,5)
lag(zr,1)
lag(all_prices,1)
lag(all_prices,-1)
lag(all_prices,k=-1)
lag(all_prices,k=1)
lag(zr,-1)
lag(zr,2)
diff(zz)
zz
zz/lag(zz)
lag(zz)
dif(zz)/lag(zz)
diff(zz)/lag(zz)
zz <- zoo(x,x,x)
zz <- zoo(cbind(x,x),x)
zz
diff(zz)
lag(zz)
index(zz)
lag(zz[,2])
lag(zz[,1])
diff(zz[,1])
simple_returns <- apply(all_prices,2, function(x) diff(all_prices)/lag(all_prices, k=-1))
ncol(all_prices)
for (i in 1:ncol(all_prices)) {
simple_returns[,i] = diff(all_prices[,i])/lag(all_prices[,i], k=-1);
}
simple_returns <- diff(all_prices[,1])/lag(all_prices[,1], k=-1))
simple_returns <- diff(all_prices[,1])/lag(all_prices[,1], k=-1)
head(simple_returns)
str(simple_returns)
simple_returns2 <- diff(all_prices[,2])/lag(all_prices[,2], k=-1)
merge(simple_returns, simple_returns2)
for (i in 1:ncol(all_prices)) {
x <- diff(all_prices[,i])/lag(all_prices[,i], k=-1);
simple_returns <- merge(simple_returns, x)
}
head(simple_returns)
str(simple_returns)
remove(x)
remove(simple_returns)
remove(simple_returns2)
for (i in 1:ncol(all_prices)) {
x <- diff(all_prices[,i])/lag(all_prices[,i], k=-1);
simple_returns <- merge(simple_returns, x)
}
remove(x)
simple_returns <- diff(all_prices[,1])/lag(all_prices[,1], k=-1);
for (i in 2:ncol(all_prices)) {
x <- diff(all_prices[,i])/lag(all_prices[,i], k=-1);
simple_returns <- merge(simple_returns, x)
}
str(simple_returns)
head(simple_returns[1])
colnames(simple_returns) <- c("NIKE", "VISA", "UNITEDHEALTH", "DIA", "TRAVELERS", "AMAZON",
"HOME_DEPOT", "GOLDMAN_SACHS", "GOOGLE")
head(simple_returns[1])
weights = rep(1/9, 9)
mu_anual <- apply(simple_returns,2,mean) * 12
sigma2_anual <- apply(simple_returns,2,var) * 12
sigma_anual <- sigma2_anual ^ 0.5
cov_mat_anual <- cov(simple_returns) * 12
str(cov(simple_returns))
cov(simple_returns)
str(cov(simple_returns)[1,2])
cov(simple_returns)[1,2]
